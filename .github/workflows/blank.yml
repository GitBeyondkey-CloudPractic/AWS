name: Deploy to EC2

on:
  workflow_dispatch:  # This allows manual triggering of the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup SSH for connecting to EC2
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      # Create Dockerfile dynamically
      - name: Create Dockerfile
        run: |
          echo 'FROM nginx:alpine' > Dockerfile
          echo 'COPY contact.html /usr/share/nginx/html/' >> Dockerfile
          echo 'EXPOSE 80' >> Dockerfile

      # Build Docker image with contact.html
      - name: Build Docker image
        run: |
          docker build -t my-html-container .

      # Connect to EC2, install Docker (if not already installed), and run the container
      - name: Deploy Docker container on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Update and install Docker if it's not installed
            if ! command -v docker &> /dev/null; then
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi
            # Add the ubuntu user to the docker group to allow running docker without sudo
            sudo usermod -aG docker ubuntu
            # Run the Docker container
            docker run -d -p 80:80 --name html-container my-html-container
          EOF

      # Expose the public IP of the EC2 instance
      - name: Get EC2 public IP
        run: |
          echo "EC2 Instance IP: ${{ secrets.EC2_HOST }}"
